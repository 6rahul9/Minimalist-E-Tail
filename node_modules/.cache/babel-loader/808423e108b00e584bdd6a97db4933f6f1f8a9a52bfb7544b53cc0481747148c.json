{"ast":null,"code":"/**\n * @tabler/icons-react v2.34.0 - MIT\n */\n\nimport { forwardRef, createElement } from 'react';\nimport PropTypes from 'prop-types';\nimport defaultAttributes from './defaultAttributes.js';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\nvar createReactComponent = (iconName, iconNamePascal, iconNode) => {\n  const Component = forwardRef((_a, ref) => {\n    var _b = _a,\n      {\n        color = \"currentColor\",\n        size = 24,\n        stroke = 2,\n        children\n      } = _b,\n      rest = __objRest(_b, [\"color\", \"size\", \"stroke\", \"children\"]);\n    return createElement(\"svg\", __spreadValues(__spreadProps(__spreadValues({\n      ref\n    }, defaultAttributes), {\n      width: size,\n      height: size,\n      stroke: color,\n      strokeWidth: stroke,\n      className: `tabler-icon tabler-icon-${iconName}`\n    }), rest), [...iconNode.map(_ref => {\n      let [tag, attrs] = _ref;\n      return createElement(tag, attrs);\n    }), ...(children || [])]);\n  });\n  Component.propTypes = {\n    color: PropTypes.string,\n    size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    stroke: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  };\n  Component.displayName = `${iconNamePascal}`;\n  return Component;\n};\nexport { createReactComponent as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,2BAAe,CAACA,QAAU,kBAAgBC,QAAa;EACrD,MAAMC,SAAY,cACd,CAACC,IAAsEC,GAAK;IAA3E;MAAE;QAAQC;QAAgBC,IAAO;QAAIC,SAAS,CAAG;QAAAC;MAAjD;MAA8DC,IAA9D,iBAA8D,CAA5D,SAAwB,QAAW,QAAY;IAC9C,qBACI,OACAC;MACEN;IAAA,GACGO,iBAFL;MAGEC,KAAO;MACPC,MAAQ;MACRN,MAAQ;MACRO,WAAa;MACbC,WAAsC;IACnC,WAEL,CAAC,GAAGd,SAASe,GAAI;MAAA,IAAC,CAACC,GAAK,OAAK,CAAM;MAAA,qBAAcA,KAAKC,KAAK,CAAC;IAAA,IAAG,IAAIV,YAAY,EAAG,GACtF;EAAA,EACR;EAEAN,UAAUiB,SAAY;IACpBd,OAAOe,SAAU;IACjBd,MAAMc,UAAUC,SAAU,EAACD,UAAUE,MAAQ,YAAUC,MAAM,CAAC;IAC9DhB,QAAQa,UAAUC,SAAU,EAACD,UAAUE,MAAQ,YAAUC,MAAM,CAAC;EAAA,CAClE;EAEArB,UAAUsB,cAAiB;EAEpB;AACT","names":["iconName","iconNode","Component","_a","ref","color","size","stroke","children","rest","__spreadValues","defaultAttributes","width","height","strokeWidth","className","map","tag","attrs","propTypes","PropTypes","oneOfType","string","number","displayName"],"sources":["D:\\Minimalist-E-commerce\\node_modules\\@tabler\\icons-react\\src\\createReactComponent.js"],"sourcesContent":["import { forwardRef, createElement } from 'react';\nimport PropTypes from 'prop-types';\nimport defaultAttributes from './defaultAttributes';\n\nexport default (iconName, iconNamePascal, iconNode) => {\n  const Component = forwardRef(\n      ({ color = 'currentColor', size = 24, stroke = 2, children, ...rest }, ref) =>\n          createElement(\n              'svg',\n              {\n                ref,\n                ...defaultAttributes,\n                width: size,\n                height: size,\n                stroke: color,\n                strokeWidth: stroke,\n                className: `tabler-icon tabler-icon-${iconName}`,\n                ...rest,\n              },\n              [...iconNode.map(([tag, attrs]) => createElement(tag, attrs)), ...(children || [])],\n          ),\n  );\n\n  Component.propTypes = {\n    color: PropTypes.string,\n    size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    stroke: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  };\n\n  Component.displayName = `${iconNamePascal}`;\n\n  return Component;\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}